#!/bin/sh
# postinst script for zipnish
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)

	echo "Creating configuration file for zipnish inside /etc/zipnish/zipnish.cfg"
	mkdir -p /etc/zipnish/

    mkdir -p /var/log/zipnish
    mkdir -p /opt/zipnish/log

    if [ ! -f /etc/zipnish/log-reader.cfg ]; then
        cp /usr/share/zipnish/log-reader/default.cfg /etc/zipnish/zipnish.cfg
    fi

    rm -rf /usr/sbin/zipnish

    touch /var/run/zipnish.pid
    chmod 0600 /var/run/zipnish.pid

    echo "Creating virtual environment to install user interface dependencies."
    cd /usr/share/zipnish/log-reader && virtualenv venv
    cd /usr/share/zipnish/log-reader/venv/bin/ && chmod u+x activate && ./activate
    /usr/share/zipnish/log-reader/venv/bin/pip install -r /usr/share/zipnish/log-reader/requirements.txt

    # start zipnish service
    service zipnish start

    ;;


    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
